name: Build and Cache

on:
  push: {}
  workflow_dispatch: {}

env:
  ATTIC_URL: ${{ secrets.ATTIC_URL }}
  ATTIC_TOKEN: ${{ secrets.ATTIC_TOKEN }}
  ATTIC_CACHE: ${{ secrets.ATTIC_CACHE }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: |
            post-build-hook = ${{ runner.temp }}/post-build.sh

      - name: Set up attic
        shell: sudo bash -e {0}
        run: |
          # Add nix executables to PATH
          export PATH="$PATH:/nix/var/nix/profiles/default/bin"
          export NIX_PATH=nixpkgs=channel:nixos-unstable

          # Create the post-build script
          cat <<EOF > "${{ runner.temp }}/post-build.sh"
          #!/bin/sh
          set -eufx

          # Add nix executables to PATH
          export PATH="\$PATH:/nix/var/nix/profiles/default/bin"

          if [ -n "\${OUT_PATHS:-}" ]; then
            cat \$HOME/.config/attic/config.toml
            cat /etc/nix/nix.conf

            echo "Uploading paths" "\$OUT_PATHS"
            exec attic push iog:midnight \$OUT_PATHS
          fi
          EOF

          # Make it executable
          chmod +x "${{ runner.temp }}/post-build.sh"

          # Install Attic client
          nix-env \
            --install \
            --option post-build-hook "" \
            --file '<nixpkgs>' \
            --attr attic-client

          # Log into attic
          attic login iog "${{ secrets.ATTIC_URL }}" "${{ secrets.ATTIC_TOKEN }}"
          attic use iog:midnight

          env | sort
          cat $HOME/.config/attic/config.toml

      - name: build hello
        run: |
          nix build -L .\#
